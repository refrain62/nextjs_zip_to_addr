import Head from 'next/head'
import React, { useState } from 'react'
import styles from '../styles/Home.module.css'

export default function Home() {

  // 都道府県一覧
  let prefectureList = [
    { id: 1, text: "北海道"},
    { id: 2, text: "青森県"},
    { id: 3, text: "岩手県"},
    { id: 4, text: "宮城県"},
    { id: 5, text: "秋田県"},
    { id: 6, text: "山形県"},
    { id: 7, text: "福島県"},
    { id: 8, text: "茨城県"},
    { id: 9, text: "栃木県"},
    { id: 10, text: "群馬県"},
    { id: 11, text: "埼玉県"},
    { id: 12, text: "千葉県"},
    { id: 13, text: "東京都"},
    { id: 14, text: "神奈川県"},
    { id: 15, text: "新潟県"},
    { id: 16, text: "富山県"},
    { id: 17, text: "石川県"},
    { id: 18, text: "福井県"},
    { id: 19, text: "山梨県"},
    { id: 20, text: "長野県"},
    { id: 21, text: "岐阜県"},
    { id: 22, text: "静岡県"},
    { id: 23, text: "愛知県"},
    { id: 24, text: "三重県"},
    { id: 25, text: "滋賀県"},
    { id: 26, text: "京都府"},
    { id: 27, text: "大阪府"},
    { id: 28, text: "兵庫県"},
    { id: 29, text: "奈良県"},
    { id: 30, text: "和歌山県"},
    { id: 31, text: "鳥取県"},
    { id: 32, text: "島根県"},
    { id: 33, text: "岡山県"},
    { id: 34, text: "広島県"},
    { id: 35, text: "山口県"},
    { id: 36, text: "徳島県"},
    { id: 37, text: "香川県"},
    { id: 38, text: "愛媛県"},
    { id: 39, text: "高知県"},
    { id: 40, text: "福岡県"},
    { id: 41, text: "佐賀県"},
    { id: 42, text: "長崎県"},
    { id: 43, text: "熊本県"},
    { id: 44, text: "大分県"},
    { id: 45, text: "宮崎県"},
    { id: 46, text: "鹿児島県"},
    { id: 47, text: "沖縄県"}
  ];

  const [ zipcode, setZipcode ] = React.useState("");
  const [ prefecture, setPrefecture ] = React.useState("");
  const [ prefcode, setPrefcode ] = React.useState("");
  const [ city, setCity ] = React.useState("");
  const [ town, setTown ] = React.useState("");

//  // ReachHookでfetchメソッドでデータを取得
//  React.useEffect( ()=> {
//
//    // 郵便番号を数字７桁に変換
//    let iZipcode = zipcode.replace("-", "");
//
//    // APIからデータ取得
//    fetch( 'https://api.zipaddress.net/?zipcode=' + iZipcode )
//      .then( response => response.json() )
//      .then( result => {
//        // データがあれば設定し、無ければクリア
//        if(     result !== null
//            &&  result.code == '200'
//            )
//        {
////console.log( result );
//          setPrefecture( result.data.pref );
//          setCity( result.data.city );
//          setTown( result.data.town );
//        }
//        else
//        {
//          setPrefecture( "" );
//          setCity( "" );
//          setTown( "" );
//        }
//      });
//  });
// // ,[ zipcode, prefecture, city, town ]);

  // ReachHookでfetchメソッドでデータを取得
  React.useEffect( ()=> {

    // 郵便番号を数字７桁に変換
    let iZipcode = zipcode.replace("-", "");

    // APIからデータ取得
    fetch( 'https://zipcloud.ibsnet.co.jp/api/search?zipcode=' + iZipcode )
      .then( response => response.json() )
      .then( result => {
        // データがあれば設定し、無ければクリア
        if(     result !== null
            &&  result.status == '200'
            &&  result.results !== null
            &&  result.results.length > 0
            )
        {
//console.log( result );

          // とりあえず複数取れても１件目を設定
//          setPrefecture( result.results[0].address1 );
          setPrefcode( result.results[0].prefcode );
          setCity( result.results[0].address2 );
          setTown( result.results[0].address3 );
        }
        else
        {
//          setPrefecture( "" );
          setPrefcode( "" );
          setCity( "" );
          setTown( "" );
        }
      });
  });
 // ,[ zipcode, prefecture, city, town ]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Next.js 郵便番号->住所変換テスト</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main >
        <h1>
          Next.js 郵便番号->住所変換テスト
        </h1>

        <div>
          <div>
            <span>郵便番号：</span>

            <input
              type="text"
              value={zipcode}
              onChange= { (e) => setZipcode( e.target.value )}
              />
          </div>

          <div>
            <span>都道府県：</span>

            <select
              value={prefcode}
              onChange= { (e) => setPrefcode( e.target.value )}
              >
              <option></option>

              { prefectureList.map( data => {
                return ( <option value={data.id}>{data.text}</option> )
              }) }
            </select>

          </div>
          
          <div>
            <span>市区町村：</span>

            <input
              type="text"
              value={city}
              onChange= { (e) => setCity( e.target.value )}
              />
          </div>
          
          <div>
            <span>町名　　：</span>

            <input
              type="text"
              value={town}
              onChange= { (e) => setTown( e.target.value )}
              />
          </div>
        </div>

        <div>
              ※複数件が取れる郵便番号「939-0351」「861-0000」
            </div>
      </main>

    </div>
  )
}
